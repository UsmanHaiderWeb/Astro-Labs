var S=i=>{throw TypeError(i)};var C=(i,t,s)=>t.has(i)||S("Cannot "+s);var e=(i,t,s)=>(C(i,t,"read from private field"),s?s.call(i):t.get(i)),b=(i,t,s)=>t.has(i)?S("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(i):t.set(i,s),p=(i,t,s,r)=>(C(i,t,"write to private field"),r?r.call(i,s):t.set(i,s),s),m=(i,t,s)=>(C(i,t,"access private method"),s);import{ak as K,al as L,am as w,an as q,ao as k,a3 as U,r as f,ap as I,aq as _,c as j}from"./index-s6iqp-WZ.js";var u,c,h,a,o,O,g,R,A=(R=class extends K{constructor(t,s){super();b(this,o);b(this,u);b(this,c);b(this,h);b(this,a);p(this,u,t),this.setOptions(s),this.bindMethods(),m(this,o,O).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){var r;const s=this.options;this.options=e(this,u).defaultMutationOptions(t),L(this.options,s)||e(this,u).getMutationCache().notify({type:"observerOptionsUpdated",mutation:e(this,h),observer:this}),s!=null&&s.mutationKey&&this.options.mutationKey&&w(s.mutationKey)!==w(this.options.mutationKey)?this.reset():((r=e(this,h))==null?void 0:r.state.status)==="pending"&&e(this,h).setOptions(this.options)}onUnsubscribe(){var t;this.hasListeners()||(t=e(this,h))==null||t.removeObserver(this)}onMutationUpdate(t){m(this,o,O).call(this),m(this,o,g).call(this,t)}getCurrentResult(){return e(this,c)}reset(){var t;(t=e(this,h))==null||t.removeObserver(this),p(this,h,void 0),m(this,o,O).call(this),m(this,o,g).call(this)}mutate(t,s){var r;return p(this,a,s),(r=e(this,h))==null||r.removeObserver(this),p(this,h,e(this,u).getMutationCache().build(e(this,u),this.options)),e(this,h).addObserver(this),e(this,h).execute(t)}},u=new WeakMap,c=new WeakMap,h=new WeakMap,a=new WeakMap,o=new WeakSet,O=function(){var s;const t=((s=e(this,h))==null?void 0:s.state)??q();p(this,c,{...t,isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset})},g=function(t){k.batch(()=>{var s,r,n,y,l,v,x,E;if(e(this,a)&&this.hasListeners()){const d=e(this,c).variables,M=e(this,c).context;(t==null?void 0:t.type)==="success"?((r=(s=e(this,a)).onSuccess)==null||r.call(s,t.data,d,M),(y=(n=e(this,a)).onSettled)==null||y.call(n,t.data,null,d,M)):(t==null?void 0:t.type)==="error"&&((v=(l=e(this,a)).onError)==null||v.call(l,t.error,d,M),(E=(x=e(this,a)).onSettled)==null||E.call(x,void 0,t.error,d,M))}this.listeners.forEach(d=>{d(e(this,c))})})},R);function Q(i,t){const s=U(),[r]=f.useState(()=>new A(s,i));f.useEffect(()=>{r.setOptions(i)},[r,i]);const n=f.useSyncExternalStore(f.useCallback(l=>r.subscribe(k.batchCalls(l)),[r]),()=>r.getCurrentResult(),()=>r.getCurrentResult()),y=f.useCallback((l,v)=>{r.mutate(l,v).catch(I)},[r]);if(n.error&&_(r.options.throwOnError,[n.error]))throw n.error;return{...n,mutate:y,mutateAsync:n.mutate}}/**
 * @license lucide-react v0.479.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const D=[["path",{d:"M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8",key:"14sxne"}],["path",{d:"M3 3v5h5",key:"1xhq8a"}],["path",{d:"M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16",key:"1hlbsb"}],["path",{d:"M16 16h5v5",key:"ccwih5"}]],T=j("RefreshCcw",D);export{T as R,Q as u};
